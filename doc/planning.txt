27.10~10.11 Découverte des outils de développement, recherche de différentes techniques de recherche. Développement de quelques routines de détection basiques
11.11~24.11 Développement plus approfondi: cas d'une détection basée sur les signatures. Début de l'élaboration d'une architecture plus précise
25.11~15.12 Début du développement du module concernant l'entropie, l'indentation, et éventuellement l'obfuscation.
Restructuration du code avec création de l'interface et suppression des imports
Recherche sur le Fuzzy hashing
16.12~29.12 Evaluation de l'efficacité des techniques mises en place et renforcement des moyens de détection (ou inveresement si trop de faux positifs)
30.12~12.01 Recherche sur les méthodes de détection basée sur la sémantique et sur les règles YARA. Début du développement selon des éléments
13.01~02.02 Début du développement d'un module de détection cherchant des patterns simples: routines dangereuses, code obfusqué, fonctions anonymes,
manipulations sur des strings suspectes (par ex "preg_replace('/x|\s+/','p', ['xh   info'][0])();") ...
03.02~16.02 Renforcement du module développé, et début de l'élaboration de l'analyse des résultats
17.02~09.03 Développement d'un module de détection basé sur les règles YARA plus poussé
10.03~23.03 Renforcement du système d'analyse des résultats et début du développement d'un module de détection basé sur la fuite d'information.
(alors que les modules précédents étaient plutôt basés sur de vrais dangers comme des appels système. Ici, ce module de concentrera plutot sur des
routines comme phpinfo())
24.03~13.04 Renforcement du système d'analyse des résultats
...
a compléter
